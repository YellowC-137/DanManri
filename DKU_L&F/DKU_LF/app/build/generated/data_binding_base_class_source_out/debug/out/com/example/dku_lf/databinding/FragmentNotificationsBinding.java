// Generated by view binder compiler. Do not edit!
package com.example.dku_lf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.dku_lf.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotificationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton keySet;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView notiRecycler;

  @NonNull
  public final TextView notiTop;

  private FragmentNotificationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton keySet, @NonNull LinearLayout linearLayout,
      @NonNull RecyclerView notiRecycler, @NonNull TextView notiTop) {
    this.rootView = rootView;
    this.keySet = keySet;
    this.linearLayout = linearLayout;
    this.notiRecycler = notiRecycler;
    this.notiTop = notiTop;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotificationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotificationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notifications, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotificationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.key_set;
      FloatingActionButton keySet = rootView.findViewById(id);
      if (keySet == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.noti_recycler;
      RecyclerView notiRecycler = rootView.findViewById(id);
      if (notiRecycler == null) {
        break missingId;
      }

      id = R.id.noti_top;
      TextView notiTop = rootView.findViewById(id);
      if (notiTop == null) {
        break missingId;
      }

      return new FragmentNotificationsBinding((ConstraintLayout) rootView, keySet, linearLayout,
          notiRecycler, notiTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
